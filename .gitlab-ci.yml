image: docker:stable

variables:
  DOCKER_HOST: "tcp://docker:2375/"
  DOCKER_DRIVER: "overlay2"
  DOCKER_TLS_CERTDIR: ""
  DOCKER_BUILDKIT: "1"

services:
- docker:dind

before_script:
- docker info
- docker login -u gitlab-ci-token -p "$CI_JOB_TOKEN" "$CI_REGISTRY"


.build: &build
  stage: build
  script:
  - TARGET=${CI_JOB_NAME##*:}
  - BUILD_TAG=${CI_REGISTRY_IMAGE}/${TARGET}/build:${CI_PIPELINE_ID}
  - docker build .
    --pull=true
    --tag=${BUILD_TAG}
    --target=${TARGET}
  - docker push ${BUILD_TAG}

.changes: &only-changes
  only: &change-files
    changes:
    - .gitlab-ci.yml
    - Dockerfile
    - data/*
    - plugins/*
    - scripts/*

.merge-requests: &only-merge-requests
  only:
    << : *change-files
    refs:
    - merge_requests

build-master:fastcgi:
  << : [ *build ]
  only: [ master, schedules ]
build-master:nginx:
  << : [ *build ]
  only: [ master, schedules ]

build-mr:fastcgi:
  << : [ *build, *only-merge-requests ]
build-mr:nginx:
  << : [ *build, *only-merge-requests ]

build:fastcgi:
  << : [ *build, *only-changes ]
  except: [ merge_requests, master, schedules ]
build:nginx:
  << : [ *build, *only-changes ]
  except: [ merge_requests, master, schedules ]


.push-tags: &push-tags
  stage: deploy
  only:
    << : *change-files
    refs: [ master, develop, schedules ]
  script: |
    BUILD_REPO=${CI_REGISTRY_IMAGE}/${CI_JOB_NAME##*:}/build:${CI_PIPELINE_ID}
    DEPLOY_REPO=${CI_REGISTRY_IMAGE}/${CI_JOB_NAME##*:}
    VERSION=`eval "docker run --rm ${BUILD_REPO} ${GET_VERSION}"`
    . scripts/deploy.sh

push:fastcgi:
  <<: *push-tags
  variables:
    GET_VERSION: wp core version
push:nginx:
  <<: *push-tags
  variables:
    GET_VERSION: nginx -V 2>&1 | sed -n '/nginx version:/s/.*nginx\///p'
