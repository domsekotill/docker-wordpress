.changes: &change-files
  changes:
  - .gitlab-ci.yml
  - Dockerfile
  - data/*
  - plugins/*
  - scripts/*

.build:
  stage: build
  image: docker.kodo.org.uk/ci-images/buildkit/buildctl:latest
  tags: [buildkit]
  rules:
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - if: $CI_PIPELINE_SOURCE == "schedule"
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  - << : *change-files
  script:
  - BUILD_TAG=${CI_REGISTRY_IMAGE}/${TARGET}/build:${CI_PIPELINE_ID}
  - buildctl build
    --frontend=dockerfile.v0
    --local context=.
    --local dockerfile=.
    --opt target=${TARGET}
    ${NGINX_VERSION:+--opt build-arg:nginx_version=$NGINX_VERSION}
    ${PHP_VERSION:+--opt build-arg:php_version=$PHP_VERSION}
    ${WORDPRESS_VERSION:+--opt build-arg:wp_version=$WORDPRESS_VERSION}
    --output type=image,name=${BUILD_TAG},push=true


.tag:
  stage: deploy
  image: docker:stable
  rules:
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == "schedule"
    variables:
      TAG: latest
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    << : *change-files
    variables:
      TAG: latest
  - if: $CI_COMMIT_BRANCH == "develop"
    << : *change-files
    variables:
      TAG: unstable
  script: |
    BUILD_REPO=${CI_REGISTRY_IMAGE}/${TARGET}/build:${CI_PIPELINE_ID}
    DEPLOY_REPO=${CI_REGISTRY_IMAGE}/${TARGET}
    if [ $TAG = latest ]; then
      VERSION=`eval "docker run --rm ${BUILD_REPO} ${GET_VERSION}"`
    fi
    . scripts/deploy.sh $TAG ${VERSION-}


Build Wordpress:
  extends: [.build]
  variables:
    TARGET: fastcgi

Build Nginx:
  extends: [.build]
  variables:
    TARGET: nginx


Tag Wordpress Image:
  extends: [.tag]
  variables:
    TARGET: fastcgi
    GET_VERSION: wp core version

Tag Nginx Image:
  extends: [.tag]
  variables:
    TARGET: nginx
    GET_VERSION: nginx -V 2>&1 | sed -n '/nginx version:/s/.*nginx\///p'
